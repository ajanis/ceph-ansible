---
unms_version: 1.1.5

docker_containers:
  unifi:
    description: "Unifi Admin Controller"
    image: linuxserver/unifi-controller:latest
    network_mode: host
    pull: "true"
    ports: []
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "{{ unifi_config_directory }}:/config"
    environment:
      PUID: "0"
      PGID: "0"
  unifi_exporter:
    description: "Prometheus Metrics Collector Unifi"
    image: unifi_exporter
    command: "-config.file /etc/unifi_exporter/config.yml"
    network_mode: host
    volumes:
      - "{{ unifi_exporter_config_directory }}:/etc/unifi_exporter"

docker_compose_projects:
  - project_name: unms
    pull: yes
    definition:
      version: '3.4'
      x-logging: &default-logging
        driver: fluentd
      networks:
        internal:
          driver: bridge
        public:
          driver: bridge
      services:
        fluentd:
          image: "ubnt/unms-fluentd:{{ unms_version }}"
          networks:
            public:
              aliases:
                - unms-fluentd
          ports:
            - "127.0.0.1:{{ unms_fluentd_port }}:{{ unms_fluentd_port }}"
          volumes:
            - "{{ unms_log_directory }}:/fluentd/log"
          environment:
            FLUENTD_UID: "{{ unms_user_id }}"
        redis:
          image: "redis:5.0.5-alpine"
          restart: on-failure
          user: "{{ unms_user_id }}"
          depends_on:
            - fluentd
          networks:
            internal:
              aliases:
                - unms-redis
          volumes:
            - "{{ unms_redis_directory }}:/data/db"
          logging:
            << : *default-logging
            options:
              fluentd-async-connect: "true"
              tag: unms-redis
          command: "redis-server --appendonly yes --dir /data/db/"
        postgres:
          image: "postgres:9.6.12-alpine"
          restart: on-failure
          user: "{{ unms_user_id }}"
          command: postgres -c log_min_duration_statement=500 -c deadlock_timeout=5000
          depends_on:
            - fluentd
          networks:
            internal:
              aliases:
                - unms-postgres
          volumes:
            - "{{ unms_pgconf_directory }}:/docker-entrypoint-initdb.d"
            - "{{ unms_postgres_directory }}:{{ unms_pgdata }}"
          logging:
            << : *default-logging
            options:
              fluentd-async-connect: "true"
              tag: unms-postgres
          environment:
            POSTGRES_USER: "{{ unms_admin_postgres_user }}"
            POSTGRES_PASSWORD: "{{ unms_admin_postgres_password }}"
            UNMS_POSTGRES_DB: "{{ unms_unms_postgres_db }}"
            UNMS_POSTGRES_SCHEMA: "{{ unms_unms_postgres_schema }}"
            UNMS_POSTGRES_USER: "{{ unms_unms_postgres_user }}"
            UNMS_POSTGRES_PASSWORD: "{{ unms_unms_postgres_password }}"
            UCRM_POSTGRES_DB: "{{ unms_ucrm_postgres_db }}"
            UCRM_POSTGRES_SCHEMA: "{{ unms_ucrm_postgres_schema }}"
            UCRM_POSTGRES_USER: "{{ unms_ucrm_postgres_user }}"
            UCRM_POSTGRES_PASSWORD: "{{ unms_ucrm_postgres_password }}"
            PGDATA: "{{ unms_pgdata }}"
        rabbitmq:
          image: "rabbitmq:3.7.14-alpine"
          restart: on-failure
          user: "{{ unms_user_id }}"
          depends_on:
            - fluentd
          networks:
            internal:
              aliases:
                - unms-rabbitmq
          hostname: rabbitmq
          volumes:
            - "{{ unms_rabbitmq_directory }}:/var/lib/rabbitmq"
          logging:
            << : *default-logging
            options:
              fluentd-async-connect: "true"
              tag: unms-rabbitmq
          environment:
            RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "{{ unms_rabbitmq_server_additional_erl_args }}"
        unms:
          image: "ubnt/unms:{{ unms_version }}"
          restart: on-failure
          depends_on:
            - fluentd
            - redis
            - postgres
            - rabbitmq
            - nginx
            - ucrm
          networks:
            - public
            - internal
          volumes:
            - "{{ unms_data_directory }}/:/home/app/unms/data"
            - "{{ unms_yarn_directory }}:/home/app/.yarn"
          logging:
            << : *default-logging
            options:
              fluentd-async-connect: "true"
              tag: unms
          environment:
            UNMS_USER_ID: "{{ unms_user_id }}"
            DEMO: "{{ unms_demo }}"
            NODE_ENV: "{{ unms_node_env }}"
            HTTP_PORT: "{{ unms_http_port }}"
            WS_PORT: "{{ unms_ws_port }}"
            WS_SHELL_PORT: "{{ unms_ws_shell_port }}"
            UNMS_WS_API_PORT: "{{ unms_ws_api_port }}"
            UNMS_NETFLOW_PORT: "{{ unms_netflow_port }}"
            SSL_CERT: "{{ unms_ssl_cert }}"
            PUBLIC_HTTPS_PORT: "{{ unms_public_https_port }}"
            PUBLIC_WS_PORT: "{{ unms_public_ws_port }}"
            NGINX_HTTPS_PORT: "{{ unms_nginx_https_port }}"
            NGINX_WS_PORT: "{{ unms_public_ws_port }}"
            SUSPEND_PORT: "{{ unms_suspend_port }}"
            HOST_TAG: "{{ unms_host_tag }}"
            BRANCH: "{{ unms_branch }}"
            HTTP_PROXY: "{{ unms_http_proxy }}"
            HTTPS_PROXY: "{{ unms_https_proxy }}"
            NO_PROXY: "{{ unms_no_proxy }}"
            http_proxy: "{{ unms_http_proxy }}"
            https_proxy: "{{ unms_https_proxy }}"
            no_proxy: "{{ unms_no_proxy }}"
            SECURE_LINK_SECRET: "{{ unms_secure_link_secret }}"
            CLUSTER_SIZE: "{{ unms_cluster_size }}"
            UNMS_PG_PASSWORD: "{{ unms_unms_postgres_password }}"
            UNMS_PG_USER: "{{ unms_unms_postgres_user }}"
            UNMS_PG_DB: "{{ unms_unms_postgres_db }}"
            UNMS_PG_SCHEMA: "{{ unms_unms_postgres_schema }}"
            UNMS_TOKEN: "{{ unms_token }}"
            UNMS_DEPLOYMENT: "{{ unms_deployment }}"
            UNMS_FEATURES: "{{ unms_features }}"
            USE_LOCAL_DISCOVERY: "{{ unms_use_local_discovery }}"
          cap_add:
            - NET_ADMIN
        ucrm:
          image: "ubnt/unms-crm:3.1.2"
          restart: on-failure
          volumes:
            - "{{ unms_ucrm_directory }}:/data"
          command: server_with_migrate
          depends_on:
            - fluentd
            - postgres
            - rabbitmq
            - nginx
          networks:
            - public
            - internal
          logging:
            << : *default-logging
            options:
              fluentd-async-connect: "true"
              tag: ucrm
          environment:
            POSTGRES_HOST: "{{ unms_postgres_host }}"
            POSTGRES_PASSWORD: "{{ unms_ucrm_postgres_password }}"
            POSTGRES_SCHEMA: "{{ unms_ucrm_postgres_schema }}"
            POSTGRES_USER: "{{ unms_ucrm_postgres_user }}"
            POSTGRES_DB: "{{ unms_ucrm_postgres_db }}"
            MAILER_ADDRESS: "{{ unms_mailer_address }}"
            MAILER_ADDRESS_USERNAME: "{{ unms_mailer_address_username }}"
            MAILER_ADDRESS_PASSWORD: "{{ unms_mailer_address_password }}"
            SECRET: "{{ unms_secret }}"
            SUSPEND_PORT: "{{ unms_suspend_port }}"
            PUBLIC_HTTPS_PORT: "{{ unms_public_https_port }}"
            UCRM_USER: "{{ unms_ucrm_user }}"
            UNMS_VERSION: "{{ unms_version }}"
            UNMS_HOST: "{{ unms_host }}"
            UNMS_PORT: "{{ unms_http_port }}"
            UNMS_TOKEN: "{{ unms_token }}"
            UNMS_BASE_URL: "{{ unms_base_url }}"
            UNMS_POSTGRES_SCHEMA: "{{ unms_unms_postgres_schema }}"
        nginx:
          image: "ubnt/unms-nginx:{{ unms_version }}"
          restart: on-failure
          ports:
            - "{{ unms_nginx_http_port }}:{{ unms_nginx_http_port }}"
            - "{{ unms_nginx_https_port }}:{{ unms_nginx_https_port }}"
            - "{{ unms_suspend_port }}:{{ unms_suspend_port }}"
          networks:
            public:
              aliases:
                - unms-nginx
            internal:
              aliases:
                - unms-nginx
          volumes:
            - "{{ unms_cert_directory }}:/cert"
            - "{{ unms_firmware_directory }}:/www/firmwares"
          depends_on:
            - fluentd
          logging:
            << : *default-logging
            options:
              fluentd-async-connect: "true"
              tag: unms-nginx
          environment:
            NGINX_UID: "{{ unms_user_id }}"
            SSL_CERT: "{{ unms_ssl_cert }}"
            SSL_CERT_KEY: "{{ unms_ssl_cert_key }}"
            SSL_CERT_CA: "{{ unms_ssl_cert_ca }}"
            HTTP_PORT: "{{ unms_nginx_http_port }}"
            HTTPS_PORT: "{{ unms_nginx_https_port }}"
            SUSPEND_PORT: "{{ unms_suspend_port }}"
            WS_PORT: "{{ unms_public_ws_port }}"
            UNMS_HTTP_PORT: "{{ unms_http_port }}"
            UNMS_WS_PORT: "{{ unms_ws_port }}"
            UNMS_WS_SHELL_PORT: "{{ unms_ws_shell_port }}"
            UNMS_WS_API_PORT: "{{ unms_ws_api_port }}"
            UNMS_IP_WHITELIST: "{{ unms_ip_whitelist }}"
            PUBLIC_HTTPS_PORT: "{{ unms_public_https_port }}"
            SECURE_LINK_SECRET: "{{ unms_secure_link_secret }}"
        netflow:
          image: "ubnt/unms-netflow:{{ unms_version }}"
          restart: on-failure
          user: "{{ unms_user_id }}"
          ports:
            - "{{ unms_netflow_port }}:{{ unms_netflow_port }}/udp"
          volumes:
            - "/etc/localtime:/etc/localtime:ro"
          networks:
            internal:
              aliases:
                - unms-netflow
            public:
              aliases:
                - unms-netflow
          depends_on:
            - fluentd
            - postgres
            - rabbitmq
            - redis
          logging:
            << : *default-logging
            options:
              fluentd-async-connect: "true"
              tag: unms-netflow
          environment:
            UNMS_NETFLOW_PORT: "{{ unms_netflow_port }}"
            UNMS_PG_PASSWORD: "{{ unms_unms_postgres_password}}"
            UNMS_PG_USER: "{{ unms_unms_postgres_user }}"
            UNMS_PG_DB: "{{ unms_unms_postgres_db }}"
            UNMS_PG_SCHEMA: "{{ unms_unms_postgres_schema }}"

docker_build_images:
  unifi_exporter:
    repo: "https://github.com/ajanis/unifi_exporter.git"

telegraf_plugins_extra:
  - name: docker
    options:
      endpoint: "unix:///var/run/docker.sock"
      timeout: "5s"
      perdevice: "true"
      total: "true"
